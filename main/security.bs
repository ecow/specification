Security Considerations {#security}
===================================

Some of the normative references with this specification
point to documents with a *Living Standard* status,
meaning their contents can still change over time.
It is advised to monitor these documents,
as such changes might have security implications.

A data pod MUST NOT assume that
HTTP request headers sent by a client are valid,
and MUST reject or sanitize invalid header values
before processing them
or incorporating them in messages sent to others.
For example,
values for `Host` and `Origin`
MUST NOT be assumed to be free of possibly malicious sequences
such as `/..` or others,
and invalid `Origin` values
MUST NOT be echoed into the `Access-Control-Allow-Origin` response header.

A data pod MUST NOT assume that the user agent is a regular Web browser,
even when requests contain familiar values
in headers such as `User-Agent` or `Origin`.
Such an assumption could lead to incorrect conclusions
about the security model of the application making the request,
since the request might actually come
from a non-browser actor unaffected by browser security constraints.

Solid data pods [disable all cross-origin protections](#cors-server) in browsers
because resource access is governed explicitly by [Web Access Control](#wac).
As such,
data pods MUST NOT rely on browser-based cross-origin protection mechanisms
for determining the authentication status or representation of a resource.
In particular,
they MUST ignore HTTP cookies from untrusted origins.
Additional security measures MAY be taken
to prevent metadata in error responses from leaking.
For instance,
a malicious app could probe multiple servers
to check whether the response status code is `401` or `403`,
or could try to access an error page
from an intranet server within the user agent's private network
to extract company names or other data.
To mitigate this,
when a request from an untrusted `Origin` arrives,
the data pod MAY set the status code of error responses to `404`
and/or anonymize or censor their contents.


Data pods SHOULD use TLS connections
to protect the contents of requests and responses
from eavesdropping and modification by third parties.
Unsecured TCP connections without TLS MAY be used
in testing environments
or when the data pod is behind a reverse proxy
that terminates a secure connection.

## Privacy Considerations ## {#privacy}

Issue: Write Privacy Considerations section.

### Identifiable Information ### {#identifiable-information}

Issue: Write Identifiable Information section.

In order to prevent leakage of non-resource data,
error responses SHOULD NOT contain identifiable information.

## Security and Privacy Review ## {#security-privacy-review}

Issue: Complete [[security-privacy-questionnaire]]
